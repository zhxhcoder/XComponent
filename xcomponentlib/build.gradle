apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 20
        versionName "3.2"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.libraryVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "xcomponent.aar"
            }
    }
}

this.project.afterEvaluate {
    def buildTask = this.project.tasks.getByName('assembleRelease')
    if (buildTask == null) throw GradleException
    buildTask.doLast {
        copyApk.execute()
    }
}

/** 执行完成打包后将文件复制到主项目的资源文件中*/
task copyApk {
    doLast {
        if (rootProject.file('app/libs/xcomponent.aar').exists()) {
            println('我先删除了旧的xcomponent.aar')
            rootProject.file('pp/libs/xcomponent.aar').delete()
        }
        copy {
            from "${buildDir}/outputs/aar/xcomponent.aar"
            into rootProject.file('app/libs/')
            println('新的xcomponent.aar已经复制到app/libs/')
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support:design:28.0.0'
}

def siteUrl = 'https://github.com/zhxhcoder/XComponent'   //项目的主页
def gitUrl = 'https://github.com/zhxhcoder/XComponent.git'   //github仓库的地址
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

version = "3.2"//version
group = "com.zhxh"//groupId
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'android'//创建的仓库名字
        name = 'XComponent'//packageName
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']//创建仓库时选择的license type
        userOrg = 'zhxh' //自己bintray创建的organization名称
        publish = true // 是否是公开项目。

        version {
            name = '3.2'//版本号
            desc = 'extent android component with customized feature'//版本描述
            released = new Date()
            vcsTag = 'v3.2'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}
install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                //项目描述
                description 'extent android component with customized feature'
                url siteUrl
                // 填写开源协议
                licenses {
                    license {
                        name 'Apache-2.0'
                        url ' http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id 'geekcoder'
                        //填写邮件地址
                        email 'zhxhcoder@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
//打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//打包源码doc文档
task javadoc(type: Javadoc) {
    options.encoding = "UTF-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

